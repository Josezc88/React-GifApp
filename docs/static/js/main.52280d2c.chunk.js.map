{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","ok","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,YAEbG,EAFa,QAGLC,GAHK,iCAIMD,EAAUE,OAJhB,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAT3B,kBAYRO,GAZQ,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,IAEpC,OACI,yBAAKe,UAAU,0CACX,yBAAKC,IAAKhB,EAAKiB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GAAI,OACPH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,EDbwBK,CAAc3B,GAAjCc,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDjB,EAApD,KACEqB,GAAW,uBAAGJ,UAAU,oCAAb,eAET,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACJD,UEZxBkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAU9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEQ6C,EAAWpB,KAAK,SAAAV,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,UCxBtC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.52280d2c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0 ) {\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=wsNlseWfRleJaylVApHFdVkyx2pkMZ9S`\r\n    const respuesta = await fetch(url);\r\n    if (respuesta.ok) {\r\n        const {data} = await respuesta.json();\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n        return gifs;\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react' // { useState, useEffect }\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            {\r\n                <div className=\"card-grid\">\r\n                    {\r\n                        images.map( (img) => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                { ...img } />\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            );\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n// const categories = ['One punch', 'Naruto', 'Bleach'];\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // categories.push('HunterXHunter');\r\n    //     setCategories( ['HunterXHunter', ...categories ] );\r\n    //     // setCategories( cats => [ ...cats, 'One Piece' ]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}